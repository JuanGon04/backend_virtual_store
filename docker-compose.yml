services:
  # Backend Service
  virtual_store_backend:
    container_name: virtual_store_backend
    build: .
    restart: always
    ports:
      - '${PORT}:3000'
    depends_on:
      - virtual-store-db
      - redis
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - FRONTEND_URL_DEV=${FRONTEND_URL_DEV}
      - FRONTEND_URL_PROD=${FRONTEND_URL_PROD}
      - ORIGINS_PROD=${ORIGINS_PROD}
      - ORIGINS_DEV=${ORIGINS_DEV}
      - JWT_SECRET=${JWT_SECRET}
      - SWAGGER_USER=${SWAGGER_USER}
      - SWAGGER_SECRET=${SWAGGER_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - WEBHOOK_ID=${WEBHOOK_ID}
      - CLIENT_GATEWAY_URL_DEV=${CLIENT_GATEWAY_URL_DEV}
      - CLIENT_GATEWAY_URL_PROD=${CLIENT_GATEWAY_URL_PROD}
      - FRONTEND_URL_DEV_CHECKOUT_PAYMENT=${FRONTEND_URL_DEV_CHECKOUT_PAYMENT}
      - FRONTEND_URL_PROD_CHECKOUT_PAYMENT=${FRONTEND_URL_PROD_CHECKOUT_PAYMENT}
    networks:
      - backend_net


  redis:
    image: redis:7.2
    container_name: redis_server
    restart: always
    command: ['redis-server', '--save', '', '--appendonly', 'no', "--maxmemory", "100mb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - '6379:6379'
    networks:
          - backend_net

  # MySQL Database
  virtual-store-db:
    container_name: virtual_store_database
    image: mysql:8.0
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - '${PORT_DATABASE}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
          - backend_net

networks:
  backend_net:
    driver: bridge